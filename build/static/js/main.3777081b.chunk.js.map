{"version":3,"sources":["PrintSet.js","PageSizeContainer.js","PrintPreview.js","PrintModal.js","App.js","registerServiceWorker.js","index.js"],"names":["Option","Select","composingStyles","numbersMap","PrintSet","this","props","changePageMargin","pageMarginBottom","pageMarginLeft","pageMarginRight","pageMarginTop","composingStyle","changeComposingStyle","nameValues","selectNameValue","options","className","size","precision","step","value","onChange","val","style","width","map","index","key","nameValue","showValue","option","optionIndex","name","Component","PageSizeContainer","pageSize","oneItem","itemLength","emptyList","paddingBottom","paddingTop","paddingLeft","paddingRight","oneData","oneDataIndex","src","alt","length","i","push","QRCodeContainerMap","PrintPreview","allData","result","len","slice","resultItem","PrintModal","trigger","content","componentRef","bodyClass","ref","el","testOptions","testObj","testData","App","state","visible","setState","message","error","filter","nameValueIndex","newSize","newStyle","type","nextValue","me","printModalProps","bind","changePageSize","addNameValue","removeNameValue","onCancel","onOk","window","print","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3777081b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Select, InputNumber } from \"antd\";\r\nconst Option = Select.Option;\r\n\r\n// const pageSizes = [\"A4\", \"A3\", \"B5\", \"A5\"];\r\nconst composingStyles = [\"1X1\", \"1X2\", \"2X3\", \"3X4\"];\r\nconst numbersMap = {\r\n  \"0\": \"一\",\r\n  \"1\": \"二\",\r\n  \"2\": \"三\"\r\n};\r\n\r\nclass PrintSet extends Component {\r\n  render() {\r\n    const {\r\n      changePageMargin,\r\n      // changePageSize,\r\n      pageMarginBottom,\r\n      pageMarginLeft,\r\n      pageMarginRight,\r\n      pageMarginTop,\r\n      // pageSize,\r\n      composingStyle,\r\n      changeComposingStyle,\r\n      nameValues,\r\n      // addNameValue,\r\n      // removeNameValue,\r\n      selectNameValue,\r\n      options\r\n    } = this.props;\r\n    return (\r\n      <div className=\"print-set\">\r\n        <fieldset>\r\n          <legend>纸张大小</legend>\r\n          {/* <Select\r\n            value={pageSize}\r\n            style={{ width: \"100%\" }}\r\n            size=\"small\"\r\n            onChange={changePageSize}\r\n          >\r\n            {pageSizes.map((pageSize, index) => {\r\n              return (\r\n                <Option value={pageSize} key={index}>\r\n                  {pageSize}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select> */}\r\n          <p className=\"tmp-A4\">A4</p>\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>页边距</legend>\r\n          <div>\r\n            上:\r\n            <InputNumber\r\n              size=\"small\"\r\n              precision={2}\r\n              step={0.01}\r\n              value={pageMarginTop}\r\n              onChange={val => {\r\n                changePageMargin(\"top\", val);\r\n              }}\r\n            />\r\n            厘米\r\n          </div>\r\n          <div>\r\n            下:\r\n            <InputNumber\r\n              size=\"small\"\r\n              precision={2}\r\n              step={0.01}\r\n              value={pageMarginBottom}\r\n              onChange={val => {\r\n                changePageMargin(\"bottom\", val);\r\n              }}\r\n            />\r\n            厘米\r\n          </div>\r\n          <div>\r\n            左:\r\n            <InputNumber\r\n              size=\"small\"\r\n              precision={2}\r\n              step={0.01}\r\n              value={pageMarginLeft}\r\n              onChange={val => {\r\n                changePageMargin(\"left\", val);\r\n              }}\r\n            />\r\n            厘米\r\n          </div>\r\n          <div>\r\n            右:\r\n            <InputNumber\r\n              size=\"small\"\r\n              precision={2}\r\n              step={0.01}\r\n              value={pageMarginRight}\r\n              onChange={val => {\r\n                changePageMargin(\"right\", val);\r\n              }}\r\n            />\r\n            厘米\r\n          </div>\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>排版样式</legend>\r\n          <Select\r\n            value={composingStyle}\r\n            style={{ width: \"100%\" }}\r\n            size=\"small\"\r\n            onChange={changeComposingStyle}\r\n          >\r\n            {composingStyles.map((composingStyle, index) => {\r\n              return (\r\n                <Option value={composingStyle} key={index}>\r\n                  {composingStyle}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>显示名称</legend>\r\n          <div>\r\n            <p className=\"name-value-text\">\r\n              {nameValues.map((nameValue, index) => {\r\n                let showValue;\r\n                if (nameValue) {\r\n                  showValue = nameValue;\r\n                } else {\r\n                  let indexStr = \"\" + index;\r\n                  showValue = `字段${numbersMap[indexStr]}`;\r\n                }\r\n                return `[${showValue}]`;\r\n              })}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            {nameValues.map((nameValue, index) => {\r\n              let icon = null;\r\n              // if (index < 1) {\r\n              //   icon = (\r\n              //     <Icon\r\n              //       type=\"plus-circle-o\"\r\n              //       onClick={throttle(addNameValue, 300)}\r\n              //     />\r\n              //   );\r\n              // } else {\r\n              //   icon = (\r\n              //     <Icon\r\n              //       type=\"minus-circle-o\"\r\n              //       onClick={() => {\r\n              //         removeNameValue(index);\r\n              //       }}\r\n              //     />\r\n              //   );\r\n              // }\r\n              let showValue = nameValue ? nameValue : \"请选择字段\";\r\n              return (\r\n                <div key={index}>\r\n                  <Select\r\n                    key={index}\r\n                    value={showValue}\r\n                    style={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    onChange={value => {\r\n                      selectNameValue(index, value);\r\n                    }}\r\n                  >\r\n                    {options.map((option, optionIndex) => {\r\n                      return (\r\n                        <Option value={option.value} key={optionIndex}>\r\n                          {option.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                  <div className=\"icon-container\">{icon}</div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrintSet;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PageSizeContainer extends Component {\r\n  render() {\r\n    const {\r\n      pageMarginBottom,\r\n      pageMarginLeft,\r\n      pageMarginRight,\r\n      pageMarginTop,\r\n      pageSize,\r\n      oneItem,\r\n      itemLength\r\n    } = this.props;\r\n    const emptyList = [];\r\n    return (\r\n      <div className={`${pageSize}-page-size`}>\r\n        <div\r\n          className={`${pageSize}-page-content`}\r\n          style={{\r\n            paddingBottom: pageMarginBottom / 2 + \"cm\",\r\n            paddingTop: pageMarginTop / 2 + \"cm\",\r\n            paddingLeft: pageMarginLeft / 2 + \"cm\",\r\n            paddingRight: pageMarginRight / 2 + \"cm\"\r\n          }}\r\n        >\r\n          {oneItem.map((oneData, oneDataIndex) => {\r\n            return (\r\n              <div className=\"QR-code-container\" key={oneDataIndex}>\r\n                <img src={oneData.src} alt={oneDataIndex} />\r\n                <p>数据标题数据...</p>\r\n              </div>\r\n            );\r\n          })}\r\n          {(() => {\r\n            if (itemLength > oneItem.length) {\r\n              for (let i = 0; i < itemLength - oneItem.length; i++) {\r\n                emptyList.push(\r\n                  <div className=\"QR-code-container empty-container\" key={i}>\r\n                    <div className=\"empty-content\" />\r\n                    <p>数据标题</p>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n          })()}\r\n          {emptyList.length ? emptyList : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageSizeContainer;\r\n","import React, { Component } from \"react\";\r\nimport PageSizeContainer from \"./PageSizeContainer\";\r\nconst QRCodeContainerMap = {\r\n  \"1X1\": 1,\r\n  \"1X2\": 2,\r\n  \"2X3\": 6,\r\n  \"3X4\": 12\r\n};\r\nclass PrintPreview extends Component {\r\n  render() {\r\n    const { composingStyle, allData } = this.props;\r\n    let result = [];\r\n    // 切割allData 每个数组data的个数\r\n    const itemLength = QRCodeContainerMap[composingStyle];\r\n    for (let i = 0, len = allData.length; i < len; i += itemLength) {\r\n      result.push(allData.slice(i, i + itemLength));\r\n    }\r\n    return result.map((resultItem, index) => {\r\n      return (\r\n        <div className={`QR-code-container p${composingStyle}`} key={index}>\r\n          <PageSizeContainer\r\n            {...this.props}\r\n            oneItem={resultItem}\r\n            itemLength={itemLength}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default PrintPreview;\r\n","import React, { Component } from \"react\";\r\nimport PrintSet from \"./PrintSet\";\r\nimport PrintPreview from \"./PrintPreview\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { Button } from \"antd\";\r\nclass PrintModal extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"print-query-code-modal clearfix\">\r\n        <PrintSet {...this.props} />\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <div className=\"print-btn\">\r\n              <Button>打印</Button>\r\n            </div>\r\n          )}\r\n          content={() => {\r\n            return this.componentRef;\r\n          }}\r\n          bodyClass=\"print-query-code-iframe\"\r\n        />\r\n        <div className=\"print-preview-container\">\r\n          <div ref={el => (this.componentRef = el)}>\r\n            <PrintPreview {...this.props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrintModal;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { message } from \"antd\";\r\nimport \"./App.css\";\r\nimport PrintModal from \"./PrintModal\";\r\n\r\nconst testOptions = [\r\n  {\r\n    name: \"选项13434343\",\r\n    value: \"option1\"\r\n  },\r\n  {\r\n    name: \"选项2\",\r\n    value: \"option2\"\r\n  },\r\n  {\r\n    name: \"选项3\",\r\n    value: \"option3\"\r\n  }\r\n];\r\nconst testObj = {\r\n  src:\r\n    \"https://qr.api.cli.im/qr?data=www.baidu.com&level=H&transparent=false&bgcolor=%23ffffff&forecolor=%23000000&blockpixel=12&marginblock=1&logourl=&size=280&kid=cliim&key=f33aa9d4852b6c3e3439d4e50f311c26\"\r\n};\r\nconst testData = [];\r\nfor (let i = 0; i < 27; i++) {\r\n  testData.push(testObj);\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // 模态窗显示隐藏\r\n      visible: true,\r\n      // 纸张大小\r\n      pageSize: \"A4\",\r\n      // 页边距\r\n      pageMarginTop: 1.27,\r\n      pageMarginBottom: 1.27,\r\n      pageMarginLeft: 1.27,\r\n      pageMarginRight: 1.27,\r\n      // 排版样式\r\n      composingStyle: \"1X1\",\r\n      // 显示名称\r\n      nameValues: [\"\"]\r\n    };\r\n  }\r\n  selectNameValue(index, nameValue) {\r\n    let { nameValues } = this.state;\r\n    nameValues[index] = nameValue;\r\n    this.setState({\r\n      nameValues\r\n    });\r\n  }\r\n  addNameValue() {\r\n    let { nameValues } = this.state;\r\n    if (nameValues.length === 3) {\r\n      message.error(\"显示名称最多支持三个字段选择\");\r\n    } else {\r\n      this.setState({\r\n        nameValues: [...nameValues, \"\"]\r\n      });\r\n    }\r\n  }\r\n  removeNameValue(index) {\r\n    let { nameValues } = this.state;\r\n    nameValues = nameValues.filter((nameValue, nameValueIndex) => {\r\n      return nameValueIndex !== index;\r\n    });\r\n    this.setState({\r\n      nameValues\r\n    });\r\n  }\r\n  showModal() {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  }\r\n  changePageSize(newSize) {\r\n    this.setState({\r\n      pageSize: newSize\r\n    });\r\n  }\r\n  changeComposingStyle(newStyle) {\r\n    this.setState({\r\n      composingStyle: newStyle\r\n    });\r\n  }\r\n  changePageMargin(type, nextValue) {\r\n    switch (type) {\r\n      case \"top\":\r\n        this.setState({\r\n          pageMarginTop: nextValue\r\n        });\r\n        break;\r\n      case \"bottom\":\r\n        this.setState({\r\n          pageMarginBottom: nextValue\r\n        });\r\n        break;\r\n      case \"left\":\r\n        this.setState({\r\n          pageMarginLeft: nextValue\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          pageMarginRight: nextValue\r\n        });\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    let me = this;\r\n    const printModalProps = {\r\n      ...this.state,\r\n      changePageMargin: this.changePageMargin.bind(this),\r\n      changePageSize: this.changePageSize.bind(this),\r\n      changeComposingStyle: this.changeComposingStyle.bind(this),\r\n      addNameValue: this.addNameValue.bind(this),\r\n      removeNameValue: this.removeNameValue.bind(this),\r\n      selectNameValue: this.selectNameValue.bind(this),\r\n      options: testOptions,\r\n      allData: testData,\r\n      onCancel() {\r\n        me.setState({\r\n          visible: false\r\n        });\r\n      },\r\n      onOk() {\r\n        window.print();\r\n        me.setState({\r\n          visible: false\r\n        });\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"App\">\r\n        <PrintModal {...printModalProps} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}